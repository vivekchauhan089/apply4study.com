{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:storybook/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "airbnb-typescript",
    "airbnb/hooks",
    "plugin:react/recommended",
    "plugin:security/recommended",
    "plugin:sonarjs/recommended",
    "plugin:css/all",
    "plugin:xss/recommended",
    "plugin:no-unsanitized/DOM",
    "plugin:jsx-a11y/strict",
    "plugin:react/jsx-runtime",
    "plugin:testing-library/react",
    "plugin:jest-dom/recommended",
    "plugin:css-modules/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:prettier/recommended"
  ],
  "settings": {
    "import/ignore": ["node_modules", "\\.json$", "postcss.config.js"],
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json"
      }, // this loads <rootdir>/tsconfig.json to eslint
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    },
    "react": {
      "version": "detect"
    },
    "css-modules": {
      "basePath": "src/"
    }
  },
  "parser": "@typescript-eslint/parser",
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.stories.@(ts|tsx|js|jsx|mjs|cjs)"],
      "parserOptions": {
        "ecmaVersion": "latest",
        "ecmaFeatures": {
          "jsx": true,
          "modules": true,
          "tsx": true,
          "ts": true
        },
        "createDefaultProgram": false,
        "sourceType": "module",
        "project": ["./tsconfig.json", "./tsconfig.node.json"] // Specify it only for TypeScript files
      }
    }
  ],
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "prettier",
    "import",
    "jsx-a11y",
    "html",
    "css",
    "testing-library",
    "jest-dom",
    "css-modules",
    "eslint-plugin-tsdoc"
  ],
  "rules": {
		"security/detect-object-injection":"off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/no-empty-function": "error",
		"@typescript-eslint/no-unsafe-member-access":"off",
    "tsdoc/syntax": "warn",
    "xss/no-mixed-html": 0,
    "react/react-in-jsx-scope": 0,
    "eslint-disable no-useless-escape": 0,
    "eslint-disable-next-line import/extensions": 0,
    "react/prop-types": 0,
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/no-unescaped-entities": "error",
    "react/no-children-prop": "error",
    "react/no-danger": "error",
    "react/no-find-dom-node": "error",
    "react/no-render-return-value": "error",
    "react/no-unknown-property": "error",
    "react/no-unused-prop-types": "error",
    "react/require-render-return": "error",
    "react/style-prop-object": "error",
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-no-target-blank": "error",
    "react/jsx-no-undef": "error",
    "react/jsx-pascal-case": "error",
    "import/no-unresolved": "error",
    "import/named": "error",
    "import/namespace": "error",
    "import/default": "error",
    "import/export": "error",
    "import/no-named-as-default": "error",
    "import/no-named-as-default-member": "error",
    "import/no-deprecated": "error",
    "import/no-mutable-exports": "error",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-argument": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "import/no-unassigned-import": [
      "error",
      {
        "allow": [
          "**/*.css",
          "**/*.scss",
          "**/*.min",
          "swiper/css/pagination",
          "swiper/css/effect-coverflow",
          "swiper/css"
        ]
      }
    ],
    "import/no-named-default": "error",
    "import/no-duplicates": "error",
    "import/no-self-import": "error",
    "import/no-useless-path-segments": "error",
    "import/no-cycle": "error",
    "import/no-dynamic-require": "error",
    "import/no-webpack-loader-syntax": "error",
    "import/no-restricted-paths": "error",
    "import/no-unused-modules": "error",
    "import/no-amd": "error",
    "import/no-commonjs": "error",
    "import/no-nodejs-modules": ["error", { "allow": ["path"] }],
    "import/first": "error",
    "import/exports-last": "error",
    "react/button-has-type": "error",
    "react/require-default-props": "error",
    "react/no-array-index-key": "error",
    "react/function-component-definition": "error",
    "react/display-name": "error",
    "react/no-access-state-in-setstate": "error",
    "react/no-unused-state": "error",
    "react/no-will-update-set-state": "error",
    "react/prefer-es6-class": "error",
    "react/prefer-stateless-function": "error",
    "react/void-dom-elements-no-children": "error",
    "react/jsx-boolean-value": "error",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-did-mount-set-state": "error",
    "react/no-did-update-set-state": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-is-mounted": "error",
    "react/no-redundant-should-component-update": "error",
    "react/no-typos": "error",
    "react/no-string-refs": "error",
    "react/no-this-in-sfc": "error",
    "react/no-unsafe": "error",
    "react/jsx-no-bind": [
      "error",
      { "ignoreDOMComponents": true, "allowFunctions": true }
    ],
    "sonarjs/cognitive-complexity": "error",
    "no-var": "error",
    /* "no-console": "error",
        "no-debugger": "error",
        "no-alert": "error", */
    "sonarjs/no-identical-expressions": "error",
    "sonarjs/no-collapsible-if": "error",
    "sonarjs/no-duplicate-string": "error",
    "sonarjs/no-element-overwrite": "error",
    "sonarjs/no-extra-arguments": "error",
    "sonarjs/no-identical-functions": "error",
    "sonarjs/no-identical-conditions": "error",
    "sonarjs/no-one-iteration-loop": "error",
    "no-console": "off",
    "react/self-closing-comp": "warn",
    "testing-library/await-async-query": "error",
    "testing-library/no-await-sync-query": "error",
    "testing-library/no-debugging-utils": "warn",
    "testing-library/no-dom-import": "off",
    "jest-dom/prefer-checked": "error",
    "jest-dom/prefer-enabled-disabled": "error",
    "jest-dom/prefer-required": "error",
    "jest-dom/prefer-to-have-attribute": "error",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "@typescript-eslint/quotes": [
      "error",
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],

    "prettier/prettier": [
      "off",
      {
        "endOfLine": "auto",
        "singleQuote": true
      },
      {
        "usePrettierrc": true
      }
    ],
    "max-statements-per-line": [
      "error",
      {
        "max": 1
      }
    ],
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "test.{ts,tsx}", // repos with a single test file
          "test-*.{ts,tsx}", // repos with multiple top-level test files
          "**/*{.,_}{test,spec}.{ts,tsx}", // tests where the extension or filename suffix denotes that it is a test
          "**/jest.config.ts", // jest config
          "**/jest.setup.ts", // jest setup
          "**/webpack.config.ts", // webpack config
          "**/webpack.config.*.ts", // webpack config
          "**/rollup.config.ts", // rollup config
          "**/rollup.config.*.ts", // rollup config
          "**/gulpfile.ts", // gulp config
          "**/gulpfile.*.ts", // gulp config
          "**/Gruntfile{,.js}", // grunt config
          "**/protractor.conf.ts", // protractor config
          "**/protractor.conf.*.ts", // protractor config
          "**/karma.conf.ts", // karma config
          "**/karma.conf.*.ts", // karma config
          "web-vitals"
        ],
        "optionalDependencies": false
      }
    ],
    "import/order": [
      "warn",
      {
        "pathGroups": [
          {
            "pattern": "~/**",
            "group": "external",
            "position": "after"
          }
        ],
        "newlines-between": "always-and-inside-groups"
      }
    ],
    "react/jsx-sort-props": [
      "warn",
      {
        "callbacksLast": true,
        "shorthandFirst": true,
        "noSortAlphabetically": false,
        "reservedFirst": true
      }
    ],
    "react/jsx-sort-default-props": [
      "warn",
      {
        "ignoreCase": true
      }
    ],
    "css-modules/no-unused-class": ["error", { "camelCase": true }], // true | "dashes" | "only" | "dashes-only"
    "css-modules/no-undef-class": ["error", { "camelCase": true }] // true | "dashes" | "only" | "dashes-only"
  }
}
